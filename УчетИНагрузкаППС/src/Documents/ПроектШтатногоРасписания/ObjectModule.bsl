#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеСервер.ОбработкаПроведения(ЭтотОбъект, Отказ, РежимПроведения);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ПроверитьНаДублиСтрок(Отказ);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПроверитьНаДублиСтрок(Отказ)
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	Таблица.НомерСтроки,
	|	Таблица.Преподаватель,
	|	Таблица.Должность,
	|	Таблица.ВидЗанятости
	|ПОМЕСТИТЬ Нагрузка
	|ИЗ
	|	&Таблица КАК Таблица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Нагрузка.Преподаватель КАК Преподаватель,
	|	Нагрузка.Преподаватель.Наименование КАК ПреподавательНаименование,
	|	Нагрузка.Должность,
	|	Нагрузка.Должность.Наименование КАК ДолжностьНаименование,
	|	Нагрузка.ВидЗанятости,
	|	МАКСИМУМ(Нагрузка.НомерСтроки) КАК НомерСтроки
	|ИЗ
	|	Нагрузка КАК Нагрузка
	|СГРУППИРОВАТЬ ПО
	|	Нагрузка.Должность,
	|	Нагрузка.ВидЗанятости,
	|	Нагрузка.Преподаватель
	|ИМЕЮЩИЕ
	|	СУММА(1) > 1");
	
	Таблица = Нагрузка.Выгрузить(, "НомерСтроки, Преподаватель, Должность, ВидЗанятости");
	Запрос.УстановитьПараметр("Таблица", Таблица);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если Не РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			ТекстОшибки = СтрШаблон("По преподователю %1 должна быть только одна строка с видом занятости %2 и должностью %3", 
				Выборка.ПреподавательНаименование, Выборка.ВидЗанятости, Выборка.ДолжностьНаименование);
			ОбщегоНазначения.СообщитьПользователю(ТекстОшибки,,,, Отказ);
		КонецЦикла;	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли