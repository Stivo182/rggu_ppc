#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// Заполняет список команд печати.
// 
// Параметры:
//  КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПроектШтатногоРасписания";
	КомандаПечати.Представление = НСтр("ru = 'Проект штатного расписания'");
	
КонецПроцедуры

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов - см. УправлениеПечатьюПереопределяемый.ПриПечати.МассивОбъектов
//  ПараметрыПечати - см. УправлениеПечатьюПереопределяемый.ПриПечати.ПараметрыПечати
//  КоллекцияПечатныхФорм - см. УправлениеПечатьюПереопределяемый.ПриПечати.КоллекцияПечатныхФорм
//  ОбъектыПечати - см. УправлениеПечатьюПереопределяемый.ПриПечати.ОбъектыПечати
//  ПараметрыВывода - см. УправлениеПечатьюПереопределяемый.ПриПечати.ПараметрыВывода
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПроектШтатногоРасписания") Тогда

		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм, 
			"ПроектШтатногоРасписания",
			НСтр("ru = 'Проект штатного расписания'"),
			СформироватьПечатнуюФормуПроектШтатногоРасписания(МассивОбъектов, ОбъектыПечати));
				
	КонецЕсли;
			
КонецПроцедуры

#КонецОбласти

// Инициализирует таблицы значений, содержащие данные для движений по регистрам.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
// Параметры:
//  Ссылка - ДокументСсылка.ПроектШтатногоРасписания - ссылка на текущий документ
//  ДополнительныеСвойства - Структура - Структура данных для подсистемы печати
//
Процедура ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства) Экспорт
	
	ТаблицыДляДвижений = ДополнительныеСвойства.ТаблицыДляДвижений;
	
	Запрос = Новый Запрос;
	
	ТекстЗапроса = "ВЫБРАТЬ
	|	ПроектШтатногоРасписанияНагрузка.Ссылка.Дата,
	|	ПроектШтатногоРасписанияНагрузка.Ссылка.УчебныйГод,
	|	ПроектШтатногоРасписанияНагрузка.Ссылка.Подразделение,
	|	ПроектШтатногоРасписанияНагрузка.Ссылка.Первичный,
	|	ПроектШтатногоРасписанияНагрузка.Преподаватель,
	|	ПроектШтатногоРасписанияНагрузка.Должность,
	|	ПроектШтатногоРасписанияНагрузка.ВидЗанятости,
	|	ПроектШтатногоРасписанияНагрузка.УченаяСтепень,
	|	ПроектШтатногоРасписанияНагрузка.УченоеЗвание,
	|	ПроектШтатногоРасписанияНагрузка.КоличествоСтавок,
	|	ПроектШтатногоРасписанияНагрузка.КоличествоЧасов,
	|	ПроектШтатногоРасписанияНагрузка.ВидЗаписи,
	|	ПроектШтатногоРасписанияНагрузка.Состояние,
	|	ПроектШтатногоРасписанияНагрузка.ЗамещаемыйПреподаватель
	|ПОМЕСТИТЬ ШтатноеРасписание
	|ИЗ
	|	Документ.ПроектШтатногоРасписания.Нагрузка КАК ПроектШтатногоРасписанияНагрузка
	|ГДЕ
	|	ПроектШтатногоРасписанияНагрузка.Ссылка = &Ссылка
	|	И Не ПроектШтатногоРасписанияНагрузка.СтавкаУдалена
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ШтатноеРасписание.Дата КАК Период,
	|	ШтатноеРасписание.УчебныйГод,
	|	ШтатноеРасписание.Подразделение,
	|	ШтатноеРасписание.Преподаватель,
	|	ШтатноеРасписание.Должность,
	|	ШтатноеРасписание.ВидЗанятости,
	|	ШтатноеРасписание.УченаяСтепень,
	|	ШтатноеРасписание.УченоеЗвание,
	|	ШтатноеРасписание.ВидЗаписи,
	|	ШтатноеРасписание.Состояние,
	|	ШтатноеРасписание.ЗамещаемыйПреподаватель,
	|	СУММА(ШтатноеРасписание.КоличествоСтавок) КАК КоличествоСтавок,
	|	СУММА(ШтатноеРасписание.КоличествоЧасов) КАК КоличествоЧасов
	|ИЗ
	|	ШтатноеРасписание КАК ШтатноеРасписание
	|СГРУППИРОВАТЬ ПО
	|	ШтатноеРасписание.УчебныйГод,
	|	ШтатноеРасписание.Подразделение,
	|	ШтатноеРасписание.Преподаватель,
	|	ШтатноеРасписание.Должность,
	|	ШтатноеРасписание.ВидЗанятости,
	|	ШтатноеРасписание.УченаяСтепень,
	|	ШтатноеРасписание.УченоеЗвание,
	|	ШтатноеРасписание.Дата,
	|	ШтатноеРасписание.ВидЗаписи,
	|	ШтатноеРасписание.Состояние,
	|	ШтатноеРасписание.ЗамещаемыйПреподаватель
	|ИМЕЮЩИЕ
	|	СУММА(ШтатноеРасписание.КоличествоСтавок) > 0
	|	ИЛИ СУММА(ШтатноеРасписание.КоличествоЧасов) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ШтатноеРасписание.Дата КАК Период,
	|	ШтатноеРасписание.УчебныйГод,
	|	ШтатноеРасписание.Подразделение,
	|	&Ссылка КАК ШтатноеРасписание,
	|	ШтатноеРасписание.Первичный
	|ИЗ
	|	ШтатноеРасписание КАК ШтатноеРасписание";
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатПакета = Запрос.ВыполнитьПакет();
	ТаблицаШтатноеРасписание = РезультатПакета[1].Выгрузить();
	ТаблицаШтатныеРасписанияПодразделений  = РезультатПакета[2].Выгрузить(); 
	
	ТаблицыДляДвижений.Вставить("ШтатноеРасписание", ТаблицаШтатноеРасписание);
	ТаблицыДляДвижений.Вставить("ШтатныеРасписанияПодразделений", ТаблицаШтатныеРасписанияПодразделений);
	
КонецПроцедуры	

// Находит проект штатного расписания 
//
// Параметры:
//		НаДату - Дата 
//		УчебныйГод - СправочникСсылка.УчебныеГоды 
//		Подразделение - СправочникСсылка.Подразделения
//		ИсключаемыйДокумент - ДокументСсылка.ПроектШтатногоРасписания
//
// Возвращаемое значение:
//		ДокументСсылка.ПроектШтатногоРасписания
Функция НайтиДокумент(НаДату, УчебныйГод, Подразделение, ИсключаемыйДокумент = Неопределено) Экспорт

	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	|	ШтатныеРасписанияПодразделенийСрезПоследних.ШтатноеРасписание
	|ИЗ
	|	РегистрСведений.ШтатныеРасписанияПодразделений.СрезПоследних(&НаДату, УчебныйГод = &УчебныйГод
	|	И Подразделение = &Подразделение
	|	И ШтатноеРасписание <> &ИсключаемыйДокумент) КАК ШтатныеРасписанияПодразделенийСрезПоследних");
	Запрос.УстановитьПараметр("НаДату", НаДату);
	Запрос.УстановитьПараметр("УчебныйГод", УчебныйГод);
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	Запрос.УстановитьПараметр("ИсключаемыйДокумент", ИсключаемыйДокумент);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если Не РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();	
		Выборка.Следующий();
		Возврат Выборка.ШтатноеРасписание;
	КонецЕсли;

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СформироватьПечатнуюФормуПроектШтатногоРасписания(МассивОбъектов, ОбъектыПечати) 
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.Текст = "ВЫБРАТЬ
	|	ПроектШтатногоРасписания.Ссылка,
	|	ПроектШтатногоРасписания.Дата,
	|	ПроектШтатногоРасписания.УчебныйГод,
	|	ПроектШтатногоРасписания.Подразделение,
	|	ПроектШтатногоРасписания.Первичный,
	|	ПроектШтатногоРасписания.Ответственный,
	|	ПроектШтатногоРасписания.РуководительКафедры,
	|	ПроектШтатногоРасписания.ДолжностьРуководителяКафедры
	|ПОМЕСТИТЬ ВТРеквизитыШапки
	|ИЗ
	|	Документ.ПроектШтатногоРасписания КАК ПроектШтатногоРасписания
	|ГДЕ
	|	ПроектШтатногоРасписания.Ссылка В (&МассивОбъектов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПроектШтатногоРасписанияНагрузка.Ссылка,
	|	ВТРеквизитыШапки.Дата,
	|	ВТРеквизитыШапки.Подразделение,
	|	ПроектШтатногоРасписанияНагрузка.НомерСтроки,
	|	ПроектШтатногоРасписанияНагрузка.ВидЗаписи,
	|	ПроектШтатногоРасписанияНагрузка.Преподаватель,
	|	ПроектШтатногоРасписанияНагрузка.Должность,
	|	ПроектШтатногоРасписанияНагрузка.ВидЗанятости,
	|	ПроектШтатногоРасписанияНагрузка.УченаяСтепень,
	|	ПроектШтатногоРасписанияНагрузка.УченоеЗвание,
	|	ПроектШтатногоРасписанияНагрузка.КоличествоСтавок,
	|	ПроектШтатногоРасписанияНагрузка.КоличествоЧасов,
	|	ПроектШтатногоРасписанияНагрузка.Состояние,
	|	ПроектШтатногоРасписанияНагрузка.ЗамещаемыйПреподаватель
	|ПОМЕСТИТЬ ВТНагрузкаПреподавателей
	|ИЗ
	|	Документ.ПроектШтатногоРасписания.Нагрузка КАК ПроектШтатногоРасписанияНагрузка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРеквизитыШапки КАК ВТРеквизитыШапки
	|		ПО ПроектШтатногоРасписанияНагрузка.Ссылка = ВТРеквизитыШапки.Ссылка
	|ГДЕ
	|	ПроектШтатногоРасписанияНагрузка.Ссылка В (&МассивОбъектов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеквизитыШапки.Дата КАК Период,
	|	РеквизитыШапки.УчебныйГод,
	|	РеквизитыШапки.Подразделение,
	|	ИСТИНА КАК ТолькоПервичный,
	|	РеквизитыШапки.Ссылка КАК ИсключаемыйДокумент
	|ПОМЕСТИТЬ ВТПодразделенияШтатногоРасписания
	|ИЗ
	|	ВТРеквизитыШапки КАК РеквизитыШапки
	|ГДЕ
	|	Не РеквизитыШапки.Первичный
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РеквизитыШапки.Дата КАК Период,
	|	РеквизитыШапки.УчебныйГод,
	|	РеквизитыШапки.Подразделение,
	|	ЛОЖЬ КАК ТолькоПервичный,
	|	РеквизитыШапки.Ссылка КАК ИсключаемыйДокумент
	|ИЗ
	|	ВТРеквизитыШапки КАК РеквизитыШапки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТНагрузкаПреподавателей.Дата КАК Период,
	|	ВТНагрузкаПреподавателей.Преподаватель КАК Сотрудник,
	|	ВТНагрузкаПреподавателей.Подразделение,
	|	ИСТИНА КАК ТолькоРаботающие
	|ПОМЕСТИТЬ ВТСотрудникиИПериоды
	|ИЗ
	|	ВТНагрузкаПреподавателей КАК ВТНагрузкаПреподавателей";
	
	Запрос.Выполнить();
	
	ШтатноеРасписание.СоздатьВТДанныеШтатногоРасписания(МенеджерВременныхТаблиц);
	Кадры.СоздатьВТКадровыеДанныеСотрудников(МенеджерВременныхТаблиц);
	
	Запрос.Текст = "ВЫБРАТЬ
	|	РеквизитыШапки.Ссылка,
	|	РеквизитыШапки.Дата,
	|	РеквизитыШапки.УчебныйГод.Наименование КАК УчебныйГодНаименование,
	|	ЕСТЬNULL(ПредыдущийУчебныйГод.Наименование, """") КАК УчебныйГодПредыдущийНаименование,
	|	РеквизитыШапки.Подразделение.Наименование КАК ПодразделениеНаименование,
	|	&ТекстПоляИерархияПодразделения КАК ВедущееПодразделениеНаименование,
	|	РеквизитыШапки.Первичный,
	|	РеквизитыШапки.Ответственный,
	|	ЕСТЬNULL(РеквизитыШапки.Ответственный.ФизическоеЛицо.Наименование, """") КАК ФИОИсполнителя,
	|	ЕСТЬNULL(УтвержденноеШтатноеРасписание.ШтатноеРасписание.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаУтверждения,
	|	ЕСТЬNULL(ПредыдущееШтатноеРасписание.ШтатноеРасписание.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаПредыдущегоИзменения,
	|	ЕСТЬNULL(РеквизитыШапки.РуководительКафедры.Наименование, """") КАК ФИОРуководителяКафедры,
	|	ПРЕДСТАВЛЕНИЕ(РеквизитыШапки.ДолжностьРуководителяКафедры) КАК ДолжностьРуководителяКафедры
	|ИЗ
	|	ВТРеквизитыШапки КАК РеквизитыШапки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТШтатноеРасписаниеПодразделений КАК УтвержденноеШтатноеРасписание
	|		ПО РеквизитыШапки.УчебныйГод = УтвержденноеШтатноеРасписание.УчебныйГод
	|		И РеквизитыШапки.Подразделение = УтвержденноеШтатноеРасписание.Подразделение
	|		И РеквизитыШапки.Дата = УтвержденноеШтатноеРасписание.Период
	|		И УтвержденноеШтатноеРасписание.ТолькоПервичный
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТШтатноеРасписаниеПодразделений КАК ПредыдущееШтатноеРасписание
	|		ПО РеквизитыШапки.УчебныйГод = ПредыдущееШтатноеРасписание.УчебныйГод
	|		И РеквизитыШапки.Подразделение = ПредыдущееШтатноеРасписание.Подразделение
	|		И РеквизитыШапки.Дата = ПредыдущееШтатноеРасписание.Период
	|		И НЕ ПредыдущееШтатноеРасписание.ТолькоПервичный
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УчебныеГоды КАК ПредыдущийУчебныйГод
	|		ПО ГОД(ПредыдущийУчебныйГод.ДатаНачала) = ГОД(РеквизитыШапки.УчебныйГод.ДатаНачала) - 1
	|
	|УПОРЯДОЧИТЬ ПО
	|	РеквизитыШапки.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НагрузкаПреподавателей.Ссылка КАК Ссылка,
	|	НагрузкаПреподавателей.ВидЗаписи,
	|	ВЫБОР
	|		КОГДА НагрузкаПреподавателей.Преподаватель = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|			ТОГДА ""Вакансия""
	|		ИНАЧЕ НагрузкаПреподавателей.Преподаватель.Наименование
	|	КОНЕЦ КАК ФИО,
	|	ВЫБОР
	|		КОГДА НагрузкаПреподавателей.Должность.Сокращение = """"
	|			ТОГДА НагрузкаПреподавателей.Должность.Наименование
	|		ИНАЧЕ НагрузкаПреподавателей.Должность.Сокращение
	|	КОНЕЦ КАК ДолжностьНаименование,
	|	ВЫБОР
	|		КОГДА НагрузкаПреподавателей.УченаяСтепень.Сокращение = """"
	|			ТОГДА НагрузкаПреподавателей.УченаяСтепень.Наименование
	|		ИНАЧЕ НагрузкаПреподавателей.УченаяСтепень.Сокращение
	|	КОНЕЦ КАК УченаяСтепеньНаименование,
	|	ВЫБОР
	|		КОГДА НагрузкаПреподавателей.УченоеЗвание.Сокращение = """"
	|			ТОГДА НагрузкаПреподавателей.УченоеЗвание.Наименование
	|		ИНАЧЕ НагрузкаПреподавателей.УченоеЗвание.Сокращение
	|	КОНЕЦ КАК УченоеЗваниеНаименование,
	|	НагрузкаПреподавателей.КоличествоСтавок КАК КоличествоСтавок,
	|	НагрузкаПреподавателей.КоличествоЧасов КАК КоличествоЧасов,
	|	ЕСТЬNULL(ДанныеШтатногоРасписания.КоличествоСтавок, ЕСТЬNULL(КадровыеДанныеСотрудников.КоличествоСтавок, 0)) КАК
	|		КоличествоСтавокДоИзменения,
	|	ЕСТЬNULL(ДанныеШтатногоРасписания.КоличествоЧасов, 0) КАК КоличествоЧасовДоИзменения,
	|	НагрузкаПреподавателей.ВидЗаписи.УчетДолжностей,
	|	НагрузкаПреподавателей.ВидЗаписи.УчетСтавок,
	|	НагрузкаПреподавателей.ВидЗаписи.Наименование,
	|	НагрузкаПреподавателей.Состояние,
	|	НагрузкаПреподавателей.ЗамещаемыйПреподаватель.Наименование КАК ЗамещаемыйПреподавательФИО
	|ИЗ
	|	ВТНагрузкаПреподавателей КАК НагрузкаПреподавателей
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТРеквизитыШапки КАК РеквизитыШапки
	|		ПО НагрузкаПреподавателей.Ссылка = РеквизитыШапки.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТШтатноеРасписаниеПодразделений КАК ПредыдущееШтатноеРасписание
	|		ПО РеквизитыШапки.УчебныйГод = ПредыдущееШтатноеРасписание.УчебныйГод
	|		И РеквизитыШапки.Подразделение = ПредыдущееШтатноеРасписание.Подразделение
	|		И РеквизитыШапки.Дата = ПредыдущееШтатноеРасписание.Период
	|		И НЕ ПредыдущееШтатноеРасписание.ТолькоПервичный
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеШтатногоРасписания КАК ДанныеШтатногоРасписания
	|		ПО ПредыдущееШтатноеРасписание.ШтатноеРасписание = ДанныеШтатногоРасписания.ШтатноеРасписание
	|		И НагрузкаПреподавателей.ВидЗаписи = ДанныеШтатногоРасписания.ВидЗаписи
	|		И НагрузкаПреподавателей.Преподаватель = ДанныеШтатногоРасписания.Преподаватель
	|		И НагрузкаПреподавателей.Должность = ДанныеШтатногоРасписания.Должность
	|		И (НагрузкаПреподавателей.УченаяСтепень = ДанныеШтатногоРасписания.УченаяСтепень
	|		Или Не ДанныеШтатногоРасписания.ЭтоВакансия)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеСотрудников КАК КадровыеДанныеСотрудников
	|		ПО НагрузкаПреподавателей.Дата = КадровыеДанныеСотрудников.Период
	|		И НагрузкаПреподавателей.Преподаватель = КадровыеДанныеСотрудников.Сотрудник
	|		И НагрузкаПреподавателей.Подразделение = КадровыеДанныеСотрудников.Подразделение
	|ГДЕ
	|	НагрузкаПреподавателей.Ссылка В (&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НагрузкаПреподавателей.Ссылка,
	|	НагрузкаПреподавателей.НомерСтроки,
	|	НагрузкаПреподавателей.ВидЗаписи.Порядок,
	|	НагрузкаПреподавателей.ВидЗаписи
	|ИТОГИ
	|	СУММА(КоличествоСтавок),
	|	СУММА(КоличествоЧасов),
	|	СУММА(КоличествоСтавокДоИзменения),
	|	СУММА(КоличествоЧасовДоИзменения)
	|ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РеквизитыШапки.Дата КАК Дата
	|ИЗ
	|	ВТРеквизитыШапки КАК РеквизитыШапки
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РеквизитыШапки.Ответственный КАК Владелец
	|ИЗ
	|	ВТРеквизитыШапки КАК РеквизитыШапки";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, 
		"&ТекстПоляИерархияПодразделения", 
		КадроваяСтруктура.ПолучениеПредставлениеИерархииПодразделенияДляТекстаЗапроса("РеквизитыШапки.Подразделение", Истина));
	
	Результаты = Запрос.ВыполнитьПакет(); 
	ВыборкаПоДокументам				= Результаты[0].Выбрать();
	ВыборкаПоШтатномуРасписанию		= Результаты[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	МассивДатДокументов				= Результаты[2].Выгрузить().ВыгрузитьКолонку("Дата");
	ВладельцыКонтактнойИнформации	= Результаты[3].Выгрузить().ВыгрузитьКолонку("Владелец");
	
	ОтветственныеЛицаОрганизацииПоДатам = КадроваяСтруктура.ОтветственныеЛицаОрганизацииПоДатам(МассивДатДокументов, 
		"РуководительОрганизации, ПроректорПоУчебнойРаботе, ГлавныйБухгалтер, НачальникКадров, НачальникУМУ");
	
	ОтборКИ = УправлениеКонтактнойИнформацией.ОтборКонтактнойИнформации();
	ОтборКИ.ВидыКонтактнойИнформации.Добавить(Справочники.ВидыКонтактнойИнформации.ТелефонПользователя);
	ОтборКИ.ВидыКонтактнойИнформации.Добавить(Справочники.ВидыКонтактнойИнформации.EmailПользователя);
	ТаблицаКонтактнойИнформации = УправлениеКонтактнойИнформацией.КонтактнаяИнформация(ВладельцыКонтактнойИнформации, ОтборКИ);
	
	ТабДокумент = Новый ТабличныйДокумент();
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПроектШтатногоРасписания_ПроектШтатногоРасписания";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПроектШтатногоРасписания.ПФ_MXL_ПроектШтатногоРасписания");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьТекстУтверждения = Макет.ПолучитьОбласть("ТекстУтверждения");
	ОбластьТекстИзменения = Макет.ПолучитьОбласть("ТекстИзменения");
	ОбластьШапкаТаблицыУтверждение = Макет.ПолучитьОбласть("ШапкаТаблицыУтверждение");
	ОбластьСтрокаТаблицыУтверждение = Макет.ПолучитьОбласть("СтрокаТаблицыУтверждение");
	ОбластьГруппировкаТаблицы = Макет.ПолучитьОбласть("ГруппировкаТаблицы");
	ОбластьСтрокаПоказателяТаблицыУтверждение = Макет.ПолучитьОбласть("СтрокаПоказателяТаблицыУтверждение");
	ОбластьПодвалТаблицыУтверждение = Макет.ПолучитьОбласть("ПодвалТаблицыУтверждение");
	ОбластьШапкаТаблицыИзменение = Макет.ПолучитьОбласть("ШапкаТаблицыИзменение");
	ОбластьСтрокаТаблицыИзменение = Макет.ПолучитьОбласть("СтрокаТаблицыИзменение");
	ОбластьСтрокаПоказателяТаблицыИзменение = Макет.ПолучитьОбласть("СтрокаПоказателяТаблицыИзменение");
	ОбластьПодвалТаблицыИзменение = Макет.ПолучитьОбласть("ПодвалТаблицыИзменение");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьСогласовал = Макет.ПолучитьОбласть("Согласовал");
	ОбластьСогласовалИИсполнитель = Макет.ПолучитьОбласть("СогласовалИИсполнитель");
	
	ПервыйДокумент = Истина;
	Пока ВыборкаПоДокументам.Следующий() Цикл
			
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		ФорматДат = "ДЛФ=DD;";
		ПредставлениеДатыДокумента = Формат(ВыборкаПоДокументам.Дата, ФорматДат);
		ПредставлениеДатыУтверждения = Формат(ВыборкаПоДокументам.ДатаУтверждения, ФорматДат);
		ПредставлениеДатыПредыдущегоИзменения = Формат(ВыборкаПоДокументам.ДатаПредыдущегоИзменения, ФорматДат);
		
		// Шапка 
		ОбластьШапка.Параметры.ВедущееПодразделение = ВыборкаПоДокументам.ВедущееПодразделениеНаименование;	
		ОбластьШапка.Параметры.Подразделение = ВыборкаПоДокументам.ПодразделениеНаименование;	
		ОбластьШапка.Параметры.Дата = ПредставлениеДатыДокумента;
		ТабДокумент.Вывести(ОбластьШапка);
		
		ПодразделениеРП = СклонениеПредставленийОбъектов.ПросклонятьПредставление(ВыборкаПоДокументам.ПодразделениеНаименование, 2);
		Если ВыборкаПоДокументам.Первичный Тогда
		
			// Текст приказа
			ОбластьТекстУтверждения.Параметры.Подразделение = ПодразделениеРП;	
			ОбластьТекстУтверждения.Параметры.Дата = ПредставлениеДатыДокумента;	
			ОбластьТекстУтверждения.Параметры.УчебныйГод = ВыборкаПоДокументам.УчебныйГодНаименование;	
			ТабДокумент.Вывести(ОбластьТекстУтверждения);
			
			// Шапка таблицы
			ОбластьШапкаТаблицыУтверждение.Параметры.УчебныйГод = ВыборкаПоДокументам.УчебныйГодНаименование;
			ОбластьШапкаТаблицыУтверждение.Параметры.УчебныйГодПредыдущий = ВыборкаПоДокументам.УчебныйГодПредыдущийНаименование;
			ТабДокумент.Вывести(ОбластьШапкаТаблицыУтверждение);
			
		Иначе
			
			// Текст приказа
			ОбластьТекстИзменения.Параметры.Подразделение = ПодразделениеРП;	
			ОбластьТекстИзменения.Параметры.ДатаУтверждения = ПредставлениеДатыУтверждения;	
			ОбластьТекстИзменения.Параметры.УчебныйГод = ВыборкаПоДокументам.УчебныйГодНаименование;	
			ТабДокумент.Вывести(ОбластьТекстИзменения);	
			
			// Шапка таблицы
			ОбластьШапкаТаблицыИзменение.Параметры.ДатаУтверждения = ПредставлениеДатыУтверждения;
			ОбластьШапкаТаблицыИзменение.Параметры.ДатаПредыдущегоИзменения = ПредставлениеДатыПредыдущегоИзменения;
			ТабДокумент.Вывести(ОбластьШапкаТаблицыИзменение);
			
		КонецЕсли;
		
		// Вывод строк
		Если ВыборкаПоШтатномуРасписанию.НайтиСледующий(Новый Структура("Ссылка", ВыборкаПоДокументам.Ссылка)) Тогда
		
			НомерСтроки = 0;
			ПредыдущийВидЗаписи = Неопределено;
		
			ВыборкаПоСтрокам = ВыборкаПоШтатномуРасписанию.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);			
			Пока ВыборкаПоСтрокам.Следующий() Цикл
				
				Если ПредыдущийВидЗаписи <> ВыборкаПоСтрокам.ВидЗаписи Тогда
					Если ВыборкаПоСтрокам.ВидЗаписиУчетДолжностей Тогда
						ОбластьГруппировкаТаблицы.Параметры.Заголовок = ВыборкаПоСтрокам.ВидЗаписиНаименование;	
						ТабДокумент.Вывести(ОбластьГруппировкаТаблицы);
					КонецЕсли;
					ПредыдущийВидЗаписи = ВыборкаПоСтрокам.ВидЗаписи;
				КонецЕсли;
				
				Если ВыборкаПоДокументам.Первичный Тогда
					Если ВыборкаПоСтрокам.ВидЗаписиУчетДолжностей Тогда
						ОбластьСтрока = ОбластьСтрокаТаблицыУтверждение;
					Иначе	
						ОбластьСтрока = ОбластьСтрокаПоказателяТаблицыУтверждение;
					КонецЕсли;
				Иначе
					Если ВыборкаПоСтрокам.ВидЗаписиУчетДолжностей Тогда
						ОбластьСтрока = ОбластьСтрокаТаблицыИзменение;	
					Иначе
						ОбластьСтрока = ОбластьСтрокаПоказателяТаблицыИзменение;
					КонецЕсли;
				КонецЕсли;
				
				ОбластьСтрока.Параметры.Заполнить(ВыборкаПоСтрокам);
				
				Если ВыборкаПоСтрокам.ВидЗаписиУчетДолжностей Тогда
					НомерСтроки = НомерСтроки + 1;
					ОбластьСтрока.Параметры.НомерПП = Формат(НомерСтроки, "ЧГ=");
					ОбластьСтрока.Параметры.Должность = ВыборкаПоСтрокам.ДолжностьНаименование
						+ ?(ЗначениеЗаполнено(ВыборкаПоСтрокам.УченаяСтепеньНаименование), ", " + ВыборкаПоСтрокам.УченаяСтепеньНаименование, "")
						+ ?(ЗначениеЗаполнено(ВыборкаПоСтрокам.УченоеЗваниеНаименование), ", " + ВыборкаПоСтрокам.УченоеЗваниеНаименование, "");
				Иначе
					ОбластьСтрока.Параметры.Заголовок = ВыборкаПоСтрокам.ВидЗаписиНаименование;
				КонецЕсли;
					
				// Доп. информация
				Если ВыборкаПоСтрокам.ВидЗаписиУчетДолжностей Тогда
					ДополнительнаяИнформация = "";							
					Если ВыборкаПоСтрокам.Состояние = Перечисления.СостоянияЗаписейШтатногоРасписания.ВДекретномОтпуске Тогда
						ДополнительнаяИнформация = "Д/О";		
					ИначеЕсли ВыборкаПоСтрокам.Состояние = Перечисления.СостоянияЗаписейШтатногоРасписания.ЗамещениеСтавки
					 И ЗначениеЗаполнено(ВыборкаПоСтрокам.ЗамещаемыйПреподавательФИО) Тогда
					 	ФИОРП = СклонениеПредставленийОбъектов.ПросклонятьФИО(ВыборкаПоСтрокам.ЗамещаемыйПреподавательФИО, 2);
						ДополнительнаяИнформация = "на ст. " + ФизическиеЛицаКлиентСервер.ФамилияИнициалы(ФИОРП);		
					КонецЕсли;
					
					ОбластьСтрока.Параметры.ДополнительнаяИнформация = "";
					Если ЗначениеЗаполнено(ДополнительнаяИнформация) Тогда
						ОбластьСтрока.Параметры.ДополнительнаяИнформация = СтрШаблон(" (%1)", ДополнительнаяИнформация);
					КонецЕсли;
				КонецЕсли;
				
				ТабДокумент.Вывести(ОбластьСтрока);
			
			КонецЦикла;
		
		КонецЕсли;
		
		// Подвал таблицы
		Если ВыборкаПоДокументам.Первичный Тогда
			ОбластьПодвалТаблицыУтверждение.Параметры.Заполнить(ВыборкаПоШтатномуРасписанию);	
			ОбластьПодвалТаблицыУтверждение.Параметры.УчебныйГод = ВыборкаПоДокументам.УчебныйГодНаименование;
			ОбластьПодвалТаблицыУтверждение.Параметры.УчебныйГодПредыдущий = ВыборкаПоДокументам.УчебныйГодПредыдущийНаименование;	
			ТабДокумент.Вывести(ОбластьПодвалТаблицыУтверждение);
		Иначе
			ОбластьПодвалТаблицыИзменение.Параметры.Заполнить(ВыборкаПоШтатномуРасписанию);	
			ОбластьПодвалТаблицыИзменение.Параметры.УчебныйГод = ВыборкаПоДокументам.УчебныйГодНаименование;
			ОбластьПодвалТаблицыИзменение.Параметры.ДатаУтверждения = ПредставлениеДатыПредыдущегоИзменения;
			ТабДокумент.Вывести(ОбластьПодвалТаблицыИзменение);
		КонецЕсли;
		
		
		// Подвал
		ОбластьПодвал.Параметры.ФамилияИОРуководителя = ФизическиеЛицаКлиентСервер.ФамилияИнициалы(ВыборкаПоДокументам.ФИОРуководителяКафедры);
		ОбластьПодвал.Параметры.ДолжностьРуководителя = ВыборкаПоДокументам.ДолжностьРуководителяКафедры;
		ТабДокумент.Вывести(ОбластьПодвал);
		
		
		// Согласование
		ОписаниеРолей = ОтветственныеЛицаОрганизацииПоДатам[ВыборкаПоДокументам.Дата];
		Если Не ОписаниеРолей = Неопределено Тогда
			
			ЗаполнитьИВывестиСогласующего(ТабДокумент, ОбластьСогласовал, ОписаниеРолей["ПроректорПоУчебнойРаботе"]);
			ЗаполнитьИВывестиСогласующего(ТабДокумент, ОбластьСогласовал, ОписаниеРолей["ГлавныйБухгалтер"]);
			ЗаполнитьИВывестиСогласующего(ТабДокумент, ОбластьСогласовал, ОписаниеРолей["НачальникКадров"]);
			ЗаполнитьИВывестиСогласующего(ТабДокумент, ОбластьСогласовал, ОписаниеРолей["НачальникУМУ"]);
		
		КонецЕсли;
		
		// Исполнитель
		КонтактнаяИнформацияОбъекта = ТаблицаКонтактнойИнформации.НайтиСтроки(Новый Структура("Объект", ВыборкаПоДокументам.Ответственный));
		Для Каждого СтрокаКИ Из КонтактнаяИнформацияОбъекта Цикл
			Если СтрокаКИ.Вид = Справочники.ВидыКонтактнойИнформации.ТелефонПользователя Тогда
				ОбластьСогласовалИИсполнитель.Параметры.ТелефонИсполнителя = СтрокаКИ.Представление;	
			ИначеЕсли СтрокаКИ.Вид = Справочники.ВидыКонтактнойИнформации.EmailПользователя Тогда
				ОбластьСогласовалИИсполнитель.Параметры.EmailИсполнителя = СтрокаКИ.Представление;
			КонецЕсли;	
		КонецЦикла;
		ОбластьСогласовалИИсполнитель.Параметры.ФИОИсполнителя = ФизическиеЛицаКлиентСервер.ФамилияИнициалы(ВыборкаПоДокументам.ФИОИсполнителя);
		
		ТабДокумент.Вывести(ОбластьСогласовалИИсполнитель);
			
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаПоДокументам.Ссылка);
				
	КонецЦикла;
	
	Возврат ТабДокумент;
						
КонецФункции

Процедура ЗаполнитьИВывестиСогласующего(ТабДокумент, ОбластьСогласовал, ОписаниеСогласующего)
	Если ОписаниеСогласующего = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ОбластьСогласовал.Параметры.Должность = ОписаниеСогласующего.Должность;
	ОбластьСогласовал.Параметры.ФамилияИО = ФизическиеЛицаКлиентСервер.ФамилияИнициалы(ОписаниеСогласующего.ФИО);
	ТабДокумент.Вывести(ОбластьСогласовал);	
КонецПроцедуры

#КонецОбласти

#КонецЕсли