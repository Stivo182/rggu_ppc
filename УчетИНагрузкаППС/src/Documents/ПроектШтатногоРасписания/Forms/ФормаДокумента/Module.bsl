#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)	
	
	Если Объект.Ссылка.Пустая() Тогда
		Объект.Ответственный = Пользователи.ТекущийПользователь(); 	
	КонецЕсли;
		
	УстановитьУсловноеОформление();	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ЗаполнитьТаблицуНагрузки();
	РаскрытьДеревоТаблицыНагрузки();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	ПоместитьНагрузкуВОбъект();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицаНагрузки

&НаКлиенте
Процедура ТаблицаНагрузкиПередУдалением(Элемент, Отказ)
	
	ДанныеСтроки = Элемент.ТекущиеДанные;
	Если ДанныеСтроки.ЭтоГруппа Тогда
		Отказ = Истина;
	КонецЕсли;

КонецПроцедуры	

&НаКлиенте
Процедура ТаблицаНагрузкиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, ЭтоГруппа, Параметр)
	
	Отказ = Истина;

	ДанныеСтроки = Элемент.ТекущиеДанные;	
	НоваяСтрока = Неопределено;
	Если Копирование Тогда	
		НоваяСтрока = КоппироватьСтрокуТаблицыНагрузки(ДанныеСтроки);
	Иначе
		НоваяСтрока = ДобавитьСтрокуТаблицыНагрузки(ДанныеСтроки);	
	КонецЕсли;
	
	Если Не НоваяСтрока = Неопределено Тогда
		ПерейтиВРежимРедактированияСтроки(НоваяСтрока);	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДобавитьПреподавателя(Команда)
	
	ДанныеСтроки = Элементы.ТаблицаНагрузки.ТекущиеДанные;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("НаДату", Объект.Дата);
	ПараметрыФормы.Вставить("Подразделение", Объект.Подразделение);
	
	Если Не ДанныеСтроки = Неопределено Тогда
		ПараметрыФормы.Вставить("ВидЗанятости", ДанныеСтроки.ВидЗанятости);
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ДобавлениеСтрокиПослеВыбораПреподавателя", ЭтотОбъект);
	
	ОткрытьФорму("Справочник.ФизическиеЛица.Форма.ФормаВыбораСотрудника", ПараметрыФормы, ЭтотОбъект, 
		УникальныйИдентификатор,,, ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВакансию(Команда)
	НоваяСтрока = ДобавитьСтрокуТаблицыНагрузкиВТекущуюГруппу();
	ПерейтиВРежимРедактированияСтроки(НоваяСтрока);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область УсловноеОформление

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	НастроитьСкрытиеВидовЗанятостиДляДетальныхСтрокНагрузки();
	НастроитьСкрытиеПреподавателейДляГрупповыхСтрокНагрузки();
	НастроитьОтображениеТекстаВакансияЕслиПреподавательНеУказан();
	НастроитьЗапретДоступностиККолонокамДляГрупповыхСтрок();
	НастроитьОтметкуНезаполненногоДолжности();
				
КонецПроцедуры

&НаСервере
Процедура НастроитьСкрытиеВидовЗанятостиДляДетальныхСтрокНагрузки()
	
	ЭлементОформления = УсловноеОформление.Элементы.Добавить();
	
	ЭлементПоля = ЭлементОформления.Поля.Элементы.Добавить();
	ЭлементПоля.Поле = Новый ПолеКомпоновкиДанных("ТаблицаНагрузкиВидЗанятости");
	
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЭлементОформления.Отбор, "ТаблицаНагрузки.ЭтоГруппа", Ложь);
	
КонецПроцедуры

&НаСервере
Процедура НастроитьСкрытиеПреподавателейДляГрупповыхСтрокНагрузки()
	
	ЭлементОформления = УсловноеОформление.Элементы.Добавить();
	
	ЭлементПоля = ЭлементОформления.Поля.Элементы.Добавить();
	ЭлементПоля.Поле = Новый ПолеКомпоновкиДанных("ТаблицаНагрузкиПреподаватель");
	
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЭлементОформления.Отбор, "ТаблицаНагрузки.ЭтоГруппа", Истина);
	
КонецПроцедуры

&НаСервере
Процедура НастроитьОтображениеТекстаВакансияЕслиПреподавательНеУказан()

	ЭлементОформления = УсловноеОформление.Элементы.Добавить();
	
	ЭлементПоля = ЭлементОформления.Поля.Элементы.Добавить();
	ЭлементПоля.Поле = Новый ПолеКомпоновкиДанных("ТаблицаНагрузкиПреподаватель");
	
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("Текст", "Вакансия");
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WindowsЦвета.ТекстНедоступный);
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЭлементОформления.Отбор, "ТаблицаНагрузки.ЭтоГруппа", Ложь);
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЭлементОформления.Отбор, "ТаблицаНагрузки.Преподаватель",, ВидСравненияКомпоновкиДанных.НеЗаполнено);
		
КонецПроцедуры

&НаСервере
Процедура НастроитьЗапретДоступностиККолонокамДляГрупповыхСтрок()

	// Запрет доступности к колонкам у строки, которая является группой 
	ЭлементОформления = УсловноеОформление.Элементы.Добавить();
	
	ЭлементПоля = ЭлементОформления.Поля.Элементы.Добавить();
	ЭлементПоля.Поле = Новый ПолеКомпоновкиДанных("ТаблицаНагрузкиДолжность");
	
	ЭлементПоля = ЭлементОформления.Поля.Элементы.Добавить();
	ЭлементПоля.Поле = Новый ПолеКомпоновкиДанных("ТаблицаНагрузкиУченаяСтепень");
	
	ЭлементПоля = ЭлементОформления.Поля.Элементы.Добавить();
	ЭлементПоля.Поле = Новый ПолеКомпоновкиДанных("ТаблицаНагрузкиУченоеЗвание");
	
	ЭлементПоля = ЭлементОформления.Поля.Элементы.Добавить();
	ЭлементПоля.Поле = Новый ПолеКомпоновкиДанных("ТаблицаНагрузкиКоличествоЧасов");
	
	ЭлементПоля = ЭлементОформления.Поля.Элементы.Добавить();
	ЭлементПоля.Поле = Новый ПолеКомпоновкиДанных("ТаблицаНагрузкиКоличествоСтавок");
	
	ЭлементПоля = ЭлементОформления.Поля.Элементы.Добавить();
	ЭлементПоля.Поле = Новый ПолеКомпоновкиДанных("ТаблицаНагрузкиКоличествоЧасовДоИзменения");
	
	ЭлементПоля = ЭлементОформления.Поля.Элементы.Добавить();
	ЭлементПоля.Поле = Новый ПолеКомпоновкиДанных("ТаблицаНагрузкиКоличествоСтавокДоИзменения");
						
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЭлементОформления.Отбор, "ТаблицаНагрузки.ЭтоГруппа", Истина);
	
КонецПроцедуры

&НаСервере
Процедура НастроитьОтметкуНезаполненногоДолжности()
		
	ЭлементОформления = УсловноеОформление.Элементы.Добавить();
	
	ЭлементПоля = ЭлементОформления.Поля.Элементы.Добавить();
	ЭлементПоля.Поле = Новый ПолеКомпоновкиДанных("ТаблицаНагрузкиДолжность");
	
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Истина);
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЭлементОформления.Отбор, "ТаблицаНагрузки.ЭтоГруппа", Ложь);
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЭлементОформления.Отбор, "ТаблицаНагрузки.Должность",, ВидСравненияКомпоновкиДанных.НеЗаполнено);
		
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ДобавлениеСтрокиПослеВыбораПреподавателя(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;

	НоваяСтрока = ДобавитьСтрокуТаблицыНагрузкиВТекущуюГруппу();
	НоваяСтрока.Преподаватель = Результат.Сотрудник;
	НоваяСтрока.Должность = Результат.Должность;
	НоваяСтрока.КоличествоСтавок = Результат.КоличествоСтавок;
	НоваяСтрока.УченоеЗвание = Результат.УченоеЗвание;
	НоваяСтрока.УченаяСтепень = Результат.УченаяСтепень;
		
	ПерейтиКСтроке(НоваяСтрока);	
	
КонецПроцедуры

#Область РаботаСТаблицейНагрузки

&НаКлиенте
Процедура РаскрытьДеревоТаблицыНагрузки()
	Для Каждого СтрокаТаблицы Из ТаблицаНагрузки.ПолучитьЭлементы() Цикл
		Элементы.ТаблицаНагрузки.Развернуть(СтрокаТаблицы.ПолучитьИдентификатор());
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТаблицуНагрузки()
	
	ЭлементыДерева = ТаблицаНагрузки.ПолучитьЭлементы();
	ЭлементыДерева.Очистить();

	ДобавитьГруппировкуТаблицыНагрузки(ПредопределенноеЗначение("Перечисление.ВидыЗанятости.Основное"));
	ДобавитьГруппировкуТаблицыНагрузки(ПредопределенноеЗначение("Перечисление.ВидыЗанятости.ВнешнееСовместительство"));
	ДобавитьГруппировкуТаблицыНагрузки(ПредопределенноеЗначение("Перечисление.ВидыЗанятости.ВнутреннееСовместительство"));
	ДобавитьГруппировкуТаблицыНагрузки(ПредопределенноеЗначение("Перечисление.ВидыЗанятости.Почасовое"));
	
	ПрочитатьНагрузкуИзОбъекта();
			
КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьНагрузкуИзОбъекта()
	
	СтрокиГруппировок = СтрокиГруппировокПоВидамЗанятости();
	
	Для Каждого СтрокаТаблицы Из Объект.Нагрузка Цикл
		
		СтрокаРодителя = СтрокиГруппировок.Получить(СтрокаТаблицы.ВидЗанятости); 
		Если СтрокаРодителя = Неопределено Тогда
			Продолжить;
		КонецЕсли;
			
		НоваяСтрока = ДобавитьСтрокуТаблицыНагрузки(СтрокаРодителя);
		НоваяСтрока.Преподаватель = СтрокаТаблицы.Преподаватель;
		НоваяСтрока.Должность = СтрокаТаблицы.Должность;
		НоваяСтрока.УченаяСтепень = СтрокаТаблицы.УченаяСтепень;		
		НоваяСтрока.УченоеЗвание = СтрокаТаблицы.УченоеЗвание;
		НоваяСтрока.КоличествоСтавок = СтрокаТаблицы.КоличествоСтавок;
		НоваяСтрока.КоличествоЧасов = СтрокаТаблицы.КоличествоЧасов;
			
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ПоместитьНагрузкуВОбъект()
	
	Объект.Нагрузка.Очистить();
	
	Для Каждого СтрокаРодитель Из ТаблицаНагрузки.ПолучитьЭлементы() Цикл		
		Для Каждого СтрокаТаблицы Из СтрокаРодитель.ПолучитьЭлементы() Цикл			
			НоваяСтрока = Объект.Нагрузка.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
		КонецЦикла;		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция СтрокиГруппировокПоВидамЗанятости()

	Соответствие = Новый Соответствие();
	
	Для Каждого СтрокаТаблицы Из ТаблицаНагрузки.ПолучитьЭлементы() Цикл
		Соответствие.Вставить(СтрокаТаблицы.ВидЗанятости, СтрокаТаблицы);		
	КонецЦикла;
	
	Возврат Соответствие;

КонецФункции

&НаКлиенте
Функция ДобавитьГруппировкуТаблицыНагрузки(ВидЗанятости)
	
	ЭлементыДерева = ТаблицаНагрузки.ПолучитьЭлементы();
	
	СтрокаТаблицы = ЭлементыДерева.Добавить();
	СтрокаТаблицы.ВидЗанятости = ВидЗанятости;
	СтрокаТаблицы.ЭтоГруппа = Истина;
	
	Возврат СтрокаТаблицы;
	
КонецФункции

&НаКлиенте
Функция ДобавитьСтрокуТаблицыНагрузки(Родитель)
	
	Если Родитель = Неопределено Тогда
		Возврат Неопределено;	
	КонецЕсли;
	
	ЭлементыДерева = Родитель.ПолучитьЭлементы();
	
	СтрокаТаблицы = ЭлементыДерева.Добавить();
	СтрокаТаблицы.ВидЗанятости = Родитель.ВидЗанятости;
	СтрокаТаблицы.ЭтоГруппа = Ложь;
	
	Возврат СтрокаТаблицы;
	
КонецФункции

&НаКлиенте
Функция ДобавитьСтрокуТаблицыНагрузкиВТекущуюГруппу()
	
	Родитель = Элементы.ТаблицаНагрузки.ТекущиеДанные;
	Если Родитель = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если Не Родитель.ЭтоГруппа Тогда
		Родитель = Родитель.ПолучитьРодителя();	
	КонецЕсли;
	
	Возврат ДобавитьСтрокуТаблицыНагрузки(Родитель);

КонецФункции

&НаКлиенте
Функция КоппироватьСтрокуТаблицыНагрузки(КоппируемаяСтрока)
	
	Если КоппируемаяСтрока.ЭтоГруппа Тогда
		Возврат Неопределено;
	КонецЕсли;

	НоваяСтрока = ДобавитьСтрокуТаблицыНагрузки(КоппируемаяСтрока.ПолучитьРодителя());
	ЗаполнитьЗначенияСвойств(НоваяСтрока, КоппируемаяСтрока);
	
	Возврат НоваяСтрока;

КонецФункции

&НаКлиенте
Процедура ПерейтиВРежимРедактированияСтроки(СтрокаТаблицы)
	
	Если Не СтрокаТаблицы = Неопределено Тогда
		Элементы.ТаблицаНагрузки.ТекущийЭлемент = Элементы.ТаблицаНагрузкиДолжность;
		ПерейтиКСтроке(СтрокаТаблицы);
		Элементы.ТаблицаНагрузки.ИзменитьСтроку();	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиКСтроке(СтрокаТаблицы)
	
	Если Не СтрокаТаблицы = Неопределено Тогда
		Элементы.ТаблицаНагрузки.ТекущаяСтрока = СтрокаТаблицы.ПолучитьИдентификатор();	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти