#Область ПрограммныйИнтерфейс

// Ответственные лица организации.
// 
// Параметры:
// 	Дата	- Дата
//  Роли	- Строка - имена ролей через запятую
// 
// Возвращаемое значение:
// 	Структура из КлючИЗначение: 
//		* Ключ - Строка - имя роли
//		* Значение - Структура из КлючИЗначение:
//			** ФизическоеЛицо - СправочникСсылка.ФизическиеЛица
//			** ФИО - Строка
//			** Должность - Строка
//						 - СправочникСсылка.Должности
Функция ОтветственныеЛицаОрганизации(Дата, Роли) Экспорт
	
	СтруктураРолей = Новый Структура(Роли);
	ПоляОписанияРоли = "ФизическоеЛицо, ФИО, Должность";
	
	СоответствиеРолей = Новый Соответствие();
	МассивРолей = Новый Массив;	
	Для Каждого КлючЗначение Из СтруктураРолей Цикл
		Роль = Перечисления.РолиОтветственныхЛиц[КлючЗначение.Ключ];
		МассивРолей.Добавить(Роль);	
		СоответствиеРолей.Вставить(Роль, КлючЗначение.Ключ);
	КонецЦикла;

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Роли", МассивРолей);
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.Текст = "ВЫБРАТЬ
	|	ОтветственныеЛицаОрганизацииСрезПоследних.Роль,
	|	ОтветственныеЛицаОрганизацииСрезПоследних.ФизическоеЛицо,
	|	ОтветственныеЛицаОрганизацииСрезПоследних.Должность КАК Должность,
	|	ОтветственныеЛицаОрганизацииСрезПоследних.ФизическоеЛицо.Наименование КАК ФИО
	|ИЗ
	|	РегистрСведений.ОтветственныеЛицаОрганизации.СрезПоследних(&Дата, Роль В (&Роли)
	|	И Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)) КАК ОтветственныеЛицаОрганизацииСрезПоследних";			
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ИмяРоли = СоответствиеРолей[Выборка.Роль];
		ОписаниеРоли = Новый Структура(ПоляОписанияРоли);
		ЗаполнитьЗначенияСвойств(ОписаниеРоли, Выборка);
		СтруктураРолей[ИмяРоли] = ОписаниеРоли;
	КонецЦикла;
	
	Возврат СтруктураРолей;

КонецФункции

// Ответственные лица организации.
// 
// Параметры:
// 	МассивДат	- Массив из Дата
//  Роли		- Строка - имена ролей через запятую
// 
// Возвращаемое значение:
// 	Соответствие из КлючИЗначение:
//		* Ключ - Дата
//		* Значение - Структура из КлючИЗначение: 
//			* Ключ - Строка - имя роли
//			* Значение - Структура:
//				** ФизическоеЛицо - СправочникСсылка.ФизическиеЛица
//				** ФИО - Строка
//				** Должность - Строка
//							 - СправочникСсылка.Должности
Функция ОтветственныеЛицаОрганизацииПоДатам(МассивДат, Роли) Экспорт
	
	Результат = Новый Соответствие();
	ПоляОписанияРоли = "ФизическоеЛицо, ФИО, Должность";
	
	СоответствиеРолей = Новый Соответствие();
	
	МассивРолей = Новый Массив;	
	СтруктураРолей = Новый Структура(Роли);
	Для Каждого КлючЗначение Из СтруктураРолей Цикл
		Роль = Перечисления.РолиОтветственныхЛиц[КлючЗначение.Ключ];
		МассивРолей.Добавить(Роль);	
		СоответствиеРолей.Вставить(Роль, КлючЗначение.Ключ);
	КонецЦикла;
	
	ТаблицаДат = Новый ТаблицаЗначений();
	ТаблицаДат.Колонки.Добавить("Дата", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	
	Для Каждого Дата Из МассивДат Цикл
		СтрокаТаблицы = ТаблицаДат.Добавить();
		СтрокаТаблицы.Дата = Дата;	
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Роли", МассивРолей);
	Запрос.УстановитьПараметр("ТаблицаДат", ТаблицаДат);
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДат.Дата КАК Дата
	|ПОМЕСТИТЬ ВТДаты
	|ИЗ
	|	&ТаблицаДат КАК ТаблицаДат
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДаты.Дата,
	|	ОтветственныеЛицаОрганизации.Роль,
	|	МАКСИМУМ(ОтветственныеЛицаОрганизации.Период) КАК МаксПериод
	|ПОМЕСТИТЬ ВТОтветственныеЛицаОрганизацииМаксПериод
	|ИЗ
	|	ВТДаты КАК ВТДаты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛицаОрганизации КАК ОтветственныеЛицаОрганизации
	|		ПО ВТДаты.Дата >= ОтветственныеЛицаОрганизации.Период
	|		И ОтветственныеЛицаОрганизации.Роль В (&Роли)
	|		И ОтветственныеЛицаОрганизации.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)
	|СГРУППИРОВАТЬ ПО
	|	ВТДаты.Дата,
	|	ОтветственныеЛицаОрганизации.Роль
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТОтветственныеЛицаОрганизацииМаксПериод.Дата КАК Дата,
	|	ОтветственныеЛицаОрганизации.Роль,
	|	ОтветственныеЛицаОрганизации.ФизическоеЛицо,
	|	ОтветственныеЛицаОрганизации.Должность КАК Должность,
	|	ОтветственныеЛицаОрганизации.ФизическоеЛицо.Наименование КАК ФИО
	|ИЗ
	|	ВТОтветственныеЛицаОрганизацииМаксПериод КАК ВТОтветственныеЛицаОрганизацииМаксПериод
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛицаОрганизации КАК ОтветственныеЛицаОрганизации
	|		ПО ОтветственныеЛицаОрганизации.Период = ВТОтветственныеЛицаОрганизацииМаксПериод.МаксПериод
	|		И ОтветственныеЛицаОрганизации.Роль = ВТОтветственныеЛицаОрганизацииМаксПериод.Роль
	|ИТОГИ
	|ПО
	|	Дата";			
	ВыборкаДат = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаДат.Следующий() Цикл
		СтруктураРолей = Новый Структура(Роли);
		Выборка = ВыборкаДат.Выбрать();
		Пока Выборка.Следующий() Цикл
			ИмяРоли = СоответствиеРолей[Выборка.Роль];
			ОписаниеРоли = Новый Структура(ПоляОписанияРоли);
			ЗаполнитьЗначенияСвойств(ОписаниеРоли, Выборка);
			СтруктураРолей[ИмяРоли] = ОписаниеРоли;
		КонецЦикла;
		Результат.Вставить(ВыборкаДат.Дата, СтруктураРолей);
	КонецЦикла;
	
	Возврат Результат;

КонецФункции

// Сведения руководителя кафедры.
// 
// Параметры:
//  Дата - Дата
//  Кафедра - СправочникСсылка.Подразделения
// 
// Возвращаемое значение:
//  Структура - Сведения руководителя кафедры:
//		* ФизическоеЛицо - СправочникСсылка.ФизическиеЛица
//		* Должность - Строка
//					- СправочникСсылка.Должности
Функция СведенияРуководителяКафедры(Дата, Кафедра) Экспорт
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	ОтветственныеЛицаОрганизацииСрезПоследних.ФизическоеЛицо,
	|	ОтветственныеЛицаОрганизацииСрезПоследних.Должность
	|ИЗ
	|	РегистрСведений.ОтветственныеЛицаОрганизации.СрезПоследних(&Дата, Роль = &Роль
	|	И Подразделение = &Подразделение) КАК ОтветственныеЛицаОрганизацииСрезПоследних");
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Роль", Перечисления.РолиОтветственныхЛиц.РуководительПодразделения);
	Запрос.УстановитьПараметр("Подразделение", Кафедра);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Результат = Новый Структура("ФизическоеЛицо, Должность");
		ЗаполнитьЗначенияСвойств(Результат, Выборка);
		Возврат Результат;
	КонецЕсли;
	
КонецФункции

// Получение представление иерархии подразделения для текста запроса.
// 
// Параметры:
//  ПутьКПодразделению - Строка - Путь к подразделению
//  ТолькоВерхниеУровни - Булево - Только верхние уровни
//  Разделитель - Строка - Разделитель
// 
// Возвращаемое значение:
//  Строка - Получение представление иерархии подразделения для текста запроса
Функция ПолучениеПредставлениеИерархииПодразделенияДляТекстаЗапроса(ПутьКПодразделению, ТолькоВерхниеУровни = Ложь, Разделитель = " / ") Экспорт

	Текст = "ВЫБОР
	|		КОГДА ЕСТЬNULL(ПутьКПодразделению.Родитель.Родитель.Наименование, """") ПОДОБНО ""%%Институт%%""
	|			ТОГДА ПутьКПодразделению.Родитель.Родитель.Наименование + Разделитель
	|		ИНАЧЕ """"
	|	КОНЕЦ";
	
	Если ТолькоВерхниеУровни Тогда
		Текст = Текст + " + ВЫБОР
		|		КОГДА Не ЕСТЬNULL(ПутьКПодразделению.Родитель.Наименование, """") = """"
		|			ТОГДА ПутьКПодразделению.Родитель.Наименование
		|		ИНАЧЕ """"
		|	КОНЕЦ" 	
	Иначе
		Текст = Текст + " + ВЫБОР
		|		КОГДА Не ЕСТЬNULL(ПутьКПодразделению.Родитель.Наименование, """") = """"
		|			ТОГДА ПутьКПодразделению.Родитель.Наименование + Разделитель
		|		ИНАЧЕ """"
		|	КОНЕЦ + ПутьКПодразделению.Наименование";
	КонецЕсли; 

	Текст = СтрЗаменить(Текст, "ПутьКПодразделению", ПутьКПодразделению);
	Текст = СтрЗаменить(Текст, "Разделитель", СтрШаблон("""%1""", Разделитель));
	
	Возврат Текст;

КонецФункции

#КонецОбласти