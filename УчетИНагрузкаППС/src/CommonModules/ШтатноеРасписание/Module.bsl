#Область ПрограммныйИнтерфейс

// Данные штатного расписания
//
// Параметры:
//   ПараметрыПолучения - см. ПараметрыПолученияШтатногоРасписания
//
// Возвращаемое значение:
//   ТаблицаЗначений - данные штатного расписания:
//       * ПроектШтатногоРасписания - ДокументСсылка.ПроектШтатногоРасписания
//       * УчебныйГод - СправочникСсылка.УчебныеГоды
//       * Подразделение - СправочникСсылка.Подразделения
//       * Преподаватель - СправочникСсылка.ФизическиеЛица
//       * Должность - СправочникСсылка.Должности
//       * ВидЗанятости - ПеречислениеСсылка.ВидыЗанятости
//       * УченоеЗвание - СправочникСсылка.УченыеЗвания
//       * УченаяСтепень - СправочникСсылка.УченыеСтепени
//       * КоличествоСтавок - Число
//       * КоличествоЧасов - Число
//       * ВидЗаписи - СправочникСсылка.ВидыЗаписейШтатногоРасписания
//
Функция ДанныеШтатногоРасписания(ПараметрыПолучения) Экспорт

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	
	СоздатьВТДанныеШтатногоРасписания(ПараметрыПолучения, Запрос.МенеджерВременныхТаблиц);
	
	Запрос.Текст = "ВЫБРАТЬ
	|	ШтатноеРасписание.ПроектШтатногоРасписания,
	|	ШтатноеРасписание.УчебныйГод,
	|	ШтатноеРасписание.Подразделение,
	|	ШтатноеРасписание.Преподаватель КАК Преподаватель,
	|	ШтатноеРасписание.Должность КАК Должность,
	|	ШтатноеРасписание.ВидЗанятости,
	|	ШтатноеРасписание.УченаяСтепень,
	|	ШтатноеРасписание.УченоеЗвание,
	|	ШтатноеРасписание.КоличествоСтавок,
	|	ШтатноеРасписание.КоличествоЧасов,
	|	ШтатноеРасписание.ВидЗаписи
	|ИЗ
	|	ВТШтатноеРасписание КАК ШтатноеРасписание
	|
	|УПОРЯДОЧИТЬ ПО
	|	Преподаватель,
	|	Должность
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса.Выгрузить();
	
КонецФункции

// Конструктор структуры для параметра ПараметрыПолучения функции ШтатноеРасписание.СоздатьВТДанныеШтатногоРасписания.
//
// Возвращаемое значение:
//   Структура:
//       * Дата - Дата
//       * УчебныйГод - СправочникСсылка.УчебныеГоды
//       * Подразделение - СправочникСсылка.Подразделения
//       * Преподаватели - Массив из СправочникСсылка.ФизическиеЛица
//       * ИсключаемыйДокумент - ДокументСсылка.ПроектШтатногоРасписания
//
Функция ПараметрыПолученияШтатногоРасписания() Экспорт
	
	Параметры = Новый Структура;	
	
	// Обязательные
	Параметры.Вставить("УчебныйГод", Справочники.УчебныеГоды.ПустаяСсылка());
	
	// Необязательные
	Параметры.Вставить("Дата", Дата(1, 1, 1));
	Параметры.Вставить("Подразделение", Справочники.Подразделения.ПустаяСсылка());
	Параметры.Вставить("Преподаватели", Новый Массив);
	Параметры.Вставить("ИсключаемыйДокумент", Документы.ПроектШтатногоРасписания.ПустаяСсылка());
	
	Возврат Параметры;

КонецФункции
	
// Формирует временную таблицу ВТШтатноеРасписание
//
// Параметры:
//		ПараметрыПолучения - см. ПараметрыПолученияШтатногоРасписания
//		МенеджерВременныхТаблиц - МенеджерВременныхТаблиц
Процедура СоздатьВТДанныеШтатногоРасписания(ПараметрыПолучения, МенеджерВременныхТаблиц) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Дата", КонецДня(ПараметрыПолучения.Дата));
	Запрос.УстановитьПараметр("УчебныйГод", ПараметрыПолучения.УчебныйГод);
	Запрос.УстановитьПараметр("Подразделение", ПараметрыПолучения.Подразделение);
	Запрос.УстановитьПараметр("ЕстьПодразделение", ЗначениеЗаполнено(ПараметрыПолучения.Подразделение));
	Запрос.УстановитьПараметр("Преподаватели", ПараметрыПолучения.Преподаватели);
	Запрос.УстановитьПараметр("ЕстьПреподаватели", ПараметрыПолучения.Преподаватели.Количество() > 0);
	Запрос.УстановитьПараметр("ИсключаемыйДокумент", ПараметрыПолучения.ИсключаемыйДокумент);
		
	Запрос.Текст = "ВЫБРАТЬ
	|	ШтатныеРасписанияПодразделенийСрезПоследних.ШтатноеРасписание
	|ПОМЕСТИТЬ АктуальныеШтатныеРасписания
	|ИЗ
	|	РегистрСведений.ШтатныеРасписанияПодразделений.СрезПоследних(&Дата, УчебныйГод = &УчебныйГод
	|	И (Подразделение = &Подразделение
	|	ИЛИ Не &ЕстьПодразделение)
	|	И ШтатноеРасписание <> &ИсключаемыйДокумент) КАК ШтатныеРасписанияПодразделенийСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ШтатноеРасписание.Регистратор КАК ПроектШтатногоРасписания,
	|	ШтатноеРасписание.УчебныйГод,
	|	ШтатноеРасписание.Подразделение,
	|	ШтатноеРасписание.Преподаватель,
	|	ШтатноеРасписание.Должность,
	|	ШтатноеРасписание.ВидЗанятости,
	|	ШтатноеРасписание.УченаяСтепень,
	|	ШтатноеРасписание.УченоеЗвание,
	|	ШтатноеРасписание.КоличествоСтавок,
	|	ШтатноеРасписание.КоличествоЧасов,
	|	ШтатноеРасписание.ВидЗаписи
	|ПОМЕСТИТЬ ВТШтатноеРасписание
	|ИЗ
	|	РегистрСведений.ШтатноеРасписание КАК ШтатноеРасписание
	|ГДЕ
	|	УчебныйГод = &УчебныйГод
	|	И (Подразделение = &Подразделение
	|	ИЛИ Не &ЕстьПодразделение)
	|	И (ШтатноеРасписание.Преподаватель В (&Преподаватели)
	|	ИЛИ Не &ЕстьПреподаватели)
	|	И ШтатноеРасписание.Регистратор В
	|		(ВЫБРАТЬ
	|			Т.ШтатноеРасписание
	|		ИЗ
	|			АктуальныеШтатныеРасписания КАК Т)";	
	
	Запрос.Выполнить();
		
КонецПроцедуры

// Формирует временную таблицу ВТНормаУчебнойНагрузки с полями:
//		- Должность - СправочникСсылка.Должности
//		- УченаяСтепень - СправочникСсылка.УченыеСтепени
//		- КоличествоЧасов - Число
//
// Параметры:
//		Дата - Дата - дата актуальности
//		МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - должен содежрать 
//			временную таблицу ВТДолжностиИУченыеСтепени с полями:
//			* Должность - СправочникСсылка.Должности
//			* УченаяСтепень - СправочникСсылка.УченыеСтепени
Процедура СоздатьВТНормаУчебнойНагрузки(Дата, МенеджерВременныхТаблиц) Экспорт

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ДатаСреза", Дата);
	
	Запрос.Текст = "ВЫБРАТЬ
	|	ДолжностиИУченыеСтепени.Должность,
	|	ДолжностиИУченыеСтепени.УченаяСтепень,
	|	ЕСТЬNULL(НормаУчебнойНагрузкиСрезПоследних.КоличествоЧасов, 0) КАК КоличествоЧасов
	|ПОМЕСТИТЬ ВТНормаУчебнойНагрузки
	|ИЗ
	|	ВТДолжностиИУченыеСтепени КАК ДолжностиИУченыеСтепени
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НормаУчебнойНагрузки.СрезПоследних(&ДатаСреза,) КАК
	|			НормаУчебнойНагрузкиСрезПоследних
	|		ПО ДолжностиИУченыеСтепени.Должность = НормаУчебнойНагрузкиСрезПоследних.Должность
	|		И ВЫБОР
	|			КОГДА ЕСТЬNULL(ДолжностиИУченыеСтепени.УченаяСтепень.Родитель,
	|				ЗНАЧЕНИЕ(Справочник.УченыеСтепени.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.УченыеСтепени.ПустаяСсылка)
	|				ТОГДА ДолжностиИУченыеСтепени.УченаяСтепень
	|			ИНАЧЕ ДолжностиИУченыеСтепени.УченаяСтепень.Родитель
	|		КОНЕЦ = НормаУчебнойНагрузкиСрезПоследних.УченаяСтепень";	
	
	Запрос.Выполнить();
	
КонецПроцедуры

#КонецОбласти