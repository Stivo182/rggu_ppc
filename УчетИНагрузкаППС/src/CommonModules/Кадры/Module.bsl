#Область ПрограммныйИнтерфейс

// Данные штатного расписания
//
// Параметры:
//   ПараметрыПолучения - см. ПараметрыПолученияШтатногоРасписания
//
// Возвращаемое значение:
//   ТаблицаЗначений - данные штатного расписания:
//       * Подразделение - СправочникСсылка.Подразделения
//       * Сотрудник - СправочникСсылка.ФизическиеЛица
//       * Должность - СправочникСсылка.Должности
//       * ВидЗанятости - ПеречислениеСсылка.ВидыЗанятости
//       * КоличествоСтавок - Число
//       * ОперацииЗавершены - Булево
//       * УченоеЗвание - СправочникСсылка.УченыеЗвания
//       * УченаяСтепень - СправочникСсылка.УченыеСтепени
//
Функция КадрвыеДанныеСотрудников(ПараметрыПолучения) Экспорт

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	
	СоздатьВТКадровыеДанныеСотрудниковПоПараметрам(ПараметрыПолучения, Запрос.МенеджерВременныхТаблиц);
	
	Запрос.Текст = "ВЫБРАТЬ
	|	КадровыеДанныеСотрудников.Сотрудник КАК Сотрудник,
	|	КадровыеДанныеСотрудников.Подразделение,
	|	КадровыеДанныеСотрудников.Должность,
	|	КадровыеДанныеСотрудников.ВидЗанятости,
	|	КадровыеДанныеСотрудников.КоличествоСтавок,
	|	КадровыеДанныеСотрудников.ОперацииЗавершены,
	|	КадровыеДанныеСотрудников.УченоеЗвание,
	|	КадровыеДанныеСотрудников.УченаяСтепень
	|ИЗ
	|	ВТКадровыеДанныеСотрудников КАК КадровыеДанныеСотрудников
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сотрудник
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса.Выгрузить();
	
КонецФункции

// Конструктор структуры для параметра ПараметрыПолучения функции Кадры.СоздатьВТКадровыеДанныеСотрудников.
//
// Возвращаемое значение:
//   Структура:
//       * Дата - Дата
//       * Подразделение - СправочникСсылка.Подразделения
//       * Сотрудники - Массив из СправочникСсылка.ФизическиеЛица
//       * ТолькоРаботающие - Булево
//
Функция ПараметрыПолученияКадовыхДанныхСотрудников() Экспорт
	
	Параметры = Новый Структура;	
	Параметры.Вставить("Дата", Дата(1, 1, 1));
	Параметры.Вставить("Подразделение", Справочники.Подразделения.ПустаяСсылка());
	Параметры.Вставить("Сотрудники", Новый Массив);
	Параметры.Вставить("ТолькоРаботающие", Ложь);

	Возврат Параметры;

КонецФункции
	
// Формирует временную таблицу ВТКадровыеДанныеСотрудников
//
// Параметры:
//		ПараметрыПолучения - см. ПараметрыПолученияКадовыхДанныхСотрудников
//		МенеджерВременныхТаблиц - МенеджерВременныхТаблиц
Процедура СоздатьВТКадровыеДанныеСотрудниковПоПараметрам(ПараметрыПолучения, МенеджерВременныхТаблиц) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Период", КонецДня(ПараметрыПолучения.Дата));
	Запрос.УстановитьПараметр("Подразделение", ПараметрыПолучения.Подразделение);
	Запрос.УстановитьПараметр("ЕстьПодразделение", ЗначениеЗаполнено(ПараметрыПолучения.Подразделение));
	Запрос.УстановитьПараметр("Сотрудники", ПараметрыПолучения.Сотрудники);
	Запрос.УстановитьПараметр("ТолькоРаботающие", ПараметрыПолучения.ТолькоРаботающие);

	Если ПараметрыПолучения.Сотрудники.Количество() Тогда
		Запрос.Текст = "ВЫБРАТЬ
		|	&Период КАК Период,
		|	ФизическиеЛица.Ссылка КАК Сотрудник,
		|	&Подразделение КАК Подразделение, 
		|	&ТолькоРаботающие КАК ТолькоРаботающие
		|ПОМЕСТИТЬ ВТСотрудникиИПериоды
		|ИЗ
		|	Справочник.ФизическиеЛица КАК ФизическиеЛица
		|ГДЕ
		|	ФизическиеЛица.Ссылка В (&Сотрудники)";	
	Иначе
		Запрос.Текст = "ВЫБРАТЬ
		|	&Период КАК Период,
		|	КадроваяИсторияСотрудниковСрезПоследних.Сотрудник,
		|	КадроваяИсторияСотрудниковСрезПоследних.Подразделение,
		|	&ТолькоРаботающие КАК ТолькоРаботающие
		|ПОМЕСТИТЬ ВТСотрудникиИПериоды
		|ИЗ
		|	РегистрСведений.КадроваяИсторияСотрудников.СрезПоследних(&Период, Подразделение = &Подразделение
		|	ИЛИ Не &ЕстьПодразделение) КАК КадроваяИсторияСотрудниковСрезПоследних";
	КонецЕсли;
	
	Запрос.Выполнить();
		
	СоздатьВТКадровыеДанныеСотрудников(МенеджерВременныхТаблиц);
	
КонецПроцедуры

// Формирует временную таблицу ВТКадровыеДанныеСотрудников
//
// Параметры:
//		МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - должен содержать таблицу ВТСотрудникиИПериоды 			
//  		Таблица ВТСотрудникиИПериоды должна содержать поля:  
//  			Период - Дата, 
//  			Сотрудник - СправочникСсылка.ФизическиеЛица 
//				Подразделение - СправочникСсылка.Подразделения
//				ТолькоРаботающие - Булево

Процедура СоздатьВТКадровыеДанныеСотрудников(МенеджерВременныхТаблиц) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст = "ВЫБРАТЬ
	|	СотрудникиИПериоды.Период,
	|	СотрудникиИПериоды.Сотрудник,
	|	СотрудникиИПериоды.Подразделение,
	|	СотрудникиИПериоды.ТолькоРаботающие,
	|	МАКСИМУМ(ЕСТЬNULL(КадроваяИсторияСотрудников.Период, ДАТАВРЕМЯ(1, 1, 1))) КАК МаксПериод
	|ПОМЕСТИТЬ ВТВТСотрудникиИМаксПериод
	|ИЗ
	|	ВТСотрудникиИПериоды КАК СотрудникиИПериоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КадроваяИсторияСотрудников КАК КадроваяИсторияСотрудников
	|		ПО СотрудникиИПериоды.Период >= КадроваяИсторияСотрудников.Период
	|		И СотрудникиИПериоды.Сотрудник = КадроваяИсторияСотрудников.Сотрудник
	|		И СотрудникиИПериоды.Подразделение = КадроваяИсторияСотрудников.Подразделение
	|СГРУППИРОВАТЬ ПО
	|	СотрудникиИПериоды.Период,
	|	СотрудникиИПериоды.Сотрудник,
	|	СотрудникиИПериоды.Подразделение,
	|	СотрудникиИПериоды.ТолькоРаботающие
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СотрудникиИПериоды.Период,
	|	СотрудникиИПериоды.Сотрудник,
	|	СотрудникиИПериоды.Подразделение,
	|	СотрудникиИПериоды.ТолькоРаботающие,
	|	ЕСТЬNULL(КадроваяИсторияСотрудников.Должность, ЗНАЧЕНИЕ(Справочник.Должности.ПустаяСсылка)) КАК Должность,
	|	ЕСТЬNULL(КадроваяИсторияСотрудников.ВидЗанятости, ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.ПустаяСсылка)) КАК
	|		ВидЗанятости,
	|	ЕСТЬNULL(КадроваяИсторияСотрудников.КоличествоСтавок, 0) КАК КоличествоСтавок,
	|	НЕ ЕСТЬNULL(КадроваяИсторияСотрудников.ОперацииЗавершены, ИСТИНА) КАК Работает,
	|	ЕСТЬNULL(УченыеЗванияФизическихЛиц.УченоеЗвание, ЗНАЧЕНИЕ(Справочник.УченыеЗвания.ПустаяСсылка)) КАК УченоеЗвание,
	|	ЕСТЬNULL(УченыеСтепениФизическихЛиц.УченаяСтепень, ЗНАЧЕНИЕ(Справочник.УченыеСтепени.ПустаяСсылка)) КАК УченаяСтепень
	|ПОМЕСТИТЬ ВТКадровыеДанныеСотрудников
	|ИЗ
	|	ВТВТСотрудникиИМаксПериод КАК СотрудникиИПериоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КадроваяИсторияСотрудников КАК КадроваяИсторияСотрудников
	|		ПО СотрудникиИПериоды.МаксПериод = КадроваяИсторияСотрудников.Период
	|		И СотрудникиИПериоды.Сотрудник = КадроваяИсторияСотрудников.Сотрудник
	|		И СотрудникиИПериоды.Подразделение = КадроваяИсторияСотрудников.Подразделение
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УченыеСтепениФизическихЛиц КАК УченыеСтепениФизическихЛиц
	|		ПО СотрудникиИПериоды.Сотрудник = УченыеСтепениФизическихЛиц.ФизическоеЛицо
	|		И УченыеСтепениФизическихЛиц.НомерПоПорядку = 1
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УченыеЗванияФизическихЛиц КАК УченыеЗванияФизическихЛиц
	|		ПО СотрудникиИПериоды.Сотрудник = УченыеЗванияФизическихЛиц.ФизическоеЛицо
	|		И УченыеЗванияФизическихЛиц.НомерПоПорядку = 1
	|ГДЕ
	|	Не ЕСТЬNULL(КадроваяИсторияСотрудников.ОперацииЗавершены, ИСТИНА)
	|	Или Не СотрудникиИПериоды.ТолькоРаботающие
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТВТСотрудникиИМаксПериод";	
	
	Запрос.Выполнить();
		
КонецПроцедуры

#КонецОбласти